generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workout {
  id           String     @id @default(cuid())
  date         DateTime
  muscleGroups String[]
  note         String?
  exercises    Exercise[] @relation("WorkoutToExercise")
  createdAt    DateTime   @default(now())
  user         User       @relation(fields: [userId], references: [id])
  userId       String
}

model Exercise {
  id        String   @id @default(cuid())
  name      String
  sets      Set[]    @relation("ExerciseToSet")
  workout   Workout  @relation("WorkoutToExercise", fields: [workoutId], references: [id], onDelete: Cascade)
  workoutId String
}

model Set {
  id         String   @id @default(cuid())
  weight     Float
  reps       Int
  exercise   Exercise @relation("ExerciseToSet", fields: [exerciseId], references: [id], onDelete: Cascade)
  exerciseId String
}

model ExerciseLibrary {
  id              String   @id @default(cuid())
  name            String   @unique
  muscleGroups    String[]
  category        String
  description     String?
  requiresWeight  Boolean  @default(true)
  difficulty      String   @default("medium") // "easy", "medium", "hard"
  exerciseType    String   @default("compound") // "compound", "isolation"
  equipmentType   String   @default("weights") // "machine", "bodyweight", "weights", "cables"
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  workouts      Workout[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
} 